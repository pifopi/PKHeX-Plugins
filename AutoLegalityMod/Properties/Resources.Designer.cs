//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoModPlugins.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AutoModPlugins.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALMSettings=Auto Legality Plugin Einstellungen
        ///
        ///LiveHeXUI=LiveHeXUI
        ///LiveHeXUI.B_ReadCurrent=Aktuelle Box lesen
        ///LiveHeXUI.B_WriteCurrent=Aktuelle Box schreiben
        ///LiveHeXUI.checkBox1=Lesen bei Boxwechsel
        ///LiveHeXUI.L_IP=IP:
        ///LiveHeXUI.L_Port=Port:
        ///LiveHeXUI.B_Connect=Verbinden
        ///LiveHeXUI.groupBox1=Boxen
        ///LiveHeXUI.checkBox2=Injecte in Slot
        ///LiveHeXUI.groupBox2=PKM Editor
        ///LiveHeXUI.L_ReadOffset=Offset:
        ///LiveHeXUI.B_ReadOffset=Offset auslesen
        ///LiveHeXUI.L_Slot=Slot:
        ///LiveHeXUI.L_Box=Box:
        ///LiveHeXUI.B_ReadS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string almlang_de {
            get {
                return ResourceManager.GetString("almlang_de", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALMSettings=Auto Legality Plugin Settings
        ///
        ///LiveHeXUI=LiveHeXUI
        ///LiveHeXUI.B_ReadCurrent=Read Current Box
        ///LiveHeXUI.B_WriteCurrent=Write Current Box
        ///LiveHeXUI.checkBox1=Read On Change Box
        ///LiveHeXUI.L_IP=IP:
        ///LiveHeXUI.L_Port=Port:
        ///LiveHeXUI.B_Connect=Connect
        ///LiveHeXUI.groupBox1=Boxes
        ///LiveHeXUI.checkBox2=Inject In Slot
        ///LiveHeXUI.groupBox2=PKM Editor
        ///LiveHeXUI.L_ReadOffset=Offset:
        ///LiveHeXUI.B_ReadOffset=Read from Offset
        ///LiveHeXUI.L_Slot=Slot:
        ///LiveHeXUI.L_Box=Box:
        ///LiveHeXUI.B_ReadSlot=Read from Sl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string almlang_en {
            get {
                return ResourceManager.GetString("almlang_en", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALMSettings=Configuración de Plugin de Auto Legalidad
        ///
        ///LiveHeXUI=IULiveHeX
        ///LiveHeXUI.B_ReadCurrent=Leer Caja Actual
        ///LiveHeXUI.B_WriteCurrent=Escribir Caja Actual
        ///LiveHeXUI.checkBox1= Leer en Caja de Cambio
        ///LiveHeXUI.L_IP=IP:
        ///LiveHeXUI.L_Port=Puerto:
        ///LiveHeXUI.B_Connect=Conectar
        ///LiveHeXUI.groupBox1=Cajas
        ///LiveHeXUI.checkBox2=Inyectar en Casilla
        ///LiveHeXUI.groupBox2=Editor de PKM
        ///LiveHeXUI.L_ReadOffset=Offset:
        ///LiveHeXUI.B_ReadOffset=Leer desde el Offset
        ///LiveHeXUI.L_Slot=Casilla:
        ///LiveHeXUI.L_Box=C [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string almlang_es {
            get {
                return ResourceManager.GetString("almlang_es", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALMSettings=Auto Legality Plugin Settings
        ///
        ///LiveHeXUI=LiveHeXUI
        ///LiveHeXUI.B_ReadCurrent=Read Current Box
        ///LiveHeXUI.B_WriteCurrent=Write Current Box
        ///LiveHeXUI.checkBox1=Read On Change Box
        ///LiveHeXUI.L_IP=IP:
        ///LiveHeXUI.L_Port=Port:
        ///LiveHeXUI.B_Connect=Connect
        ///LiveHeXUI.groupBox1=Boxes
        ///LiveHeXUI.checkBox2=Inject In Slot
        ///LiveHeXUI.groupBox2=PKM Editor
        ///LiveHeXUI.L_ReadOffset=Offset:
        ///LiveHeXUI.B_ReadOffset=Read from Offset
        ///LiveHeXUI.L_Slot=Slot:
        ///LiveHeXUI.L_Box=Box:
        ///LiveHeXUI.B_ReadSlot=Read from Sl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string almlang_fr {
            get {
                return ResourceManager.GetString("almlang_fr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALMSettings=Auto Legality Plugin Settings
        ///
        ///LiveHeXUI=LiveHeXUI
        ///LiveHeXUI.B_ReadCurrent=Read Current Box
        ///LiveHeXUI.B_WriteCurrent=Write Current Box
        ///LiveHeXUI.checkBox1=Read On Change Box
        ///LiveHeXUI.L_IP=IP:
        ///LiveHeXUI.L_Port=Port:
        ///LiveHeXUI.B_Connect=Connect
        ///LiveHeXUI.groupBox1=Boxes
        ///LiveHeXUI.checkBox2=Inject In Slot
        ///LiveHeXUI.groupBox2=PKM Editor
        ///LiveHeXUI.L_ReadOffset=Offset:
        ///LiveHeXUI.B_ReadOffset=Read from Offset
        ///LiveHeXUI.L_Slot=Slot:
        ///LiveHeXUI.L_Box=Box:
        ///LiveHeXUI.B_ReadSlot=Read from Sl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string almlang_it {
            get {
                return ResourceManager.GetString("almlang_it", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALMSettings=Auto Legality Plugin Settings
        ///
        ///LiveHeXUI=LiveHeXUI
        ///LiveHeXUI.B_ReadCurrent=Read Current Box
        ///LiveHeXUI.B_WriteCurrent=Write Current Box
        ///LiveHeXUI.checkBox1=Read On Change Box
        ///LiveHeXUI.L_IP=IP:
        ///LiveHeXUI.L_Port=Port:
        ///LiveHeXUI.B_Connect=Connect
        ///LiveHeXUI.groupBox1=Boxes
        ///LiveHeXUI.checkBox2=Inject In Slot
        ///LiveHeXUI.groupBox2=PKM Editor
        ///LiveHeXUI.L_ReadOffset=Offset:
        ///LiveHeXUI.B_ReadOffset=Read from Offset
        ///LiveHeXUI.L_Slot=Slot:
        ///LiveHeXUI.L_Box=Box:
        ///LiveHeXUI.B_ReadSlot=Read from Sl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string almlang_ja {
            get {
                return ResourceManager.GetString("almlang_ja", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALMSettings=Auto Legality Plugin Settings
        ///
        ///LiveHeXUI=LiveHeXUI
        ///LiveHeXUI.B_ReadCurrent=Read Current Box
        ///LiveHeXUI.B_WriteCurrent=Write Current Box
        ///LiveHeXUI.checkBox1=Read On Change Box
        ///LiveHeXUI.L_IP=IP:
        ///LiveHeXUI.L_Port=Port:
        ///LiveHeXUI.B_Connect=Connect
        ///LiveHeXUI.groupBox1=Boxes
        ///LiveHeXUI.checkBox2=Inject In Slot
        ///LiveHeXUI.groupBox2=PKM Editor
        ///LiveHeXUI.L_ReadOffset=Offset:
        ///LiveHeXUI.B_ReadOffset=Read from Offset
        ///LiveHeXUI.L_Slot=Slot:
        ///LiveHeXUI.L_Box=Box:
        ///LiveHeXUI.B_ReadSlot=Read from Sl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string almlang_ko {
            get {
                return ResourceManager.GetString("almlang_ko", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALMSettings=Auto Legality Plugin Settings
        ///
        ///LiveHeXUI=LiveHeXUI
        ///LiveHeXUI.B_ReadCurrent=Read Current Box
        ///LiveHeXUI.B_WriteCurrent=Write Current Box
        ///LiveHeXUI.checkBox1=Read On Change Box
        ///LiveHeXUI.L_IP=IP:
        ///LiveHeXUI.L_Port=Port:
        ///LiveHeXUI.B_Connect=Connect
        ///LiveHeXUI.groupBox1=Boxes
        ///LiveHeXUI.checkBox2=Inject In Slot
        ///LiveHeXUI.groupBox2=PKM Editor
        ///LiveHeXUI.L_ReadOffset=Offset:
        ///LiveHeXUI.B_ReadOffset=Read from Offset
        ///LiveHeXUI.L_Slot=Slot:
        ///LiveHeXUI.L_Box=Box:
        ///LiveHeXUI.B_ReadSlot=Read from Sl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string almlang_zh {
            get {
                return ResourceManager.GetString("almlang_zh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap autolegalitymod {
            get {
                object obj = ResourceManager.GetObject("autolegalitymod", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon blmicon {
            get {
                object obj = ResourceManager.GetObject("blmicon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap exportboxtoshowdown {
            get {
                object obj = ResourceManager.GetObject("exportboxtoshowdown", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap exportqrcode {
            get {
                object obj = ResourceManager.GetObject("exportqrcode", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap flagbrew {
            get {
                object obj = ResourceManager.GetObject("flagbrew", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon icon {
            get {
                object obj = ResourceManager.GetObject("icon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap legalizeboxes {
            get {
                object obj = ResourceManager.GetObject("legalizeboxes", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap livingdex {
            get {
                object obj = ResourceManager.GetObject("livingdex", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap menuautolegality {
            get {
                object obj = ResourceManager.GetObject("menuautolegality", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap mgdbdownload {
            get {
                object obj = ResourceManager.GetObject("mgdbdownload", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap pglqrcode {
            get {
                object obj = ResourceManager.GetObject("pglqrcode", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap settings {
            get {
                object obj = ResourceManager.GetObject("settings", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap smogongenner {
            get {
                object obj = ResourceManager.GetObject("smogongenner", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap upload {
            get {
                object obj = ResourceManager.GetObject("upload", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap urlimport {
            get {
                object obj = ResourceManager.GetObject("urlimport", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap wifi {
            get {
                object obj = ResourceManager.GetObject("wifi", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
